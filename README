Like memcached, but using SimpleDB/S3. Not to be confused with a similarly named
program written in Java (now named BigCache). 

Here's how it works:

from cloudcache import Client,cached
client = Client(aws_access_key_id,aws_secret_access_key)
...
client.put(key,data,expires=3600,replace=True)
...
client.get(key)

Wow that's simple! I also added a decorator to automatically cache function
calls based on the function name and the parameters.

@cached(expires=3600)
def thisTakesALongTimeToExecute(a,b,c,d):
    # Does some stuff
    return e

To run the benchmark: python tests/benchmark.py

09/03/2009
I have actually discontinued development on this as a stand-alone project. It 
is now part of a larger AWS framework I'm developing (yet to be released). I 
might occasionally merge changes back in here, but no promises.

Also, I decided to drop the "d" from CloudCached since it's not really a daemon
